/**
                       * @license
                       * author: TanglePay
                       * @tanglepaysdk/ethereumprovider.js v0.0.1
                       * Released under the Apache-2.0 license.
                       */
this.ethereum=function(){"use strict";var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};var t=function(){return t=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},t.apply(this,arguments)};function n(e,t,n,r){return new(n||(n=Promise))((function(i,o){function a(e){try{u(r.next(e))}catch(e){o(e)}}function s(e){try{u(r.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}u((r=r.apply(e,t||[])).next())}))}function r(e,t){var n,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(s){return function(u){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;o&&(o=0,s[0]&&(a=0)),a;)try{if(n=1,r&&(i=2&s[0]?r.return:s[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,s[1])).done)return i;switch(r=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,r=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!(i=a.trys,(i=i.length>0&&i[i.length-1])||6!==s[0]&&2!==s[0])){a=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){a.label=s[1];break}if(6===s[0]&&a.label<i[1]){a.label=i[1],i=s;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(s);break}i[2]&&a.ops.pop(),a.trys.pop();continue}s=t.call(e,a)}catch(e){s=[6,e],r=0}finally{n=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,u])}}}function i(){}function o(){o.init.call(this)}function a(e){return void 0===e._maxListeners?o.defaultMaxListeners:e._maxListeners}function s(e,t,n,r){var o,s,u;if("function"!=typeof n)throw new TypeError('"listener" argument must be a function');if((s=e._events)?(s.newListener&&(e.emit("newListener",t,n.listener?n.listener:n),s=e._events),u=s[t]):(s=e._events=new i,e._eventsCount=0),u){if("function"==typeof u?u=s[t]=r?[n,u]:[u,n]:r?u.unshift(n):u.push(n),!u.warned&&(o=a(e))&&o>0&&u.length>o){u.warned=!0;var f=new Error("Possible EventEmitter memory leak detected. "+u.length+" "+t+" listeners added. Use emitter.setMaxListeners() to increase limit");f.name="MaxListenersExceededWarning",f.emitter=e,f.type=t,f.count=u.length,function(e){"function"==typeof console.warn?console.warn(e):console.log(e)}(f)}}else u=s[t]=n,++e._eventsCount;return e}function u(e,t,n){var r=!1;function i(){e.removeListener(t,i),r||(r=!0,n.apply(e,arguments))}return i.listener=n,i}function f(e){var t=this._events;if(t){var n=t[e];if("function"==typeof n)return 1;if(n)return n.length}return 0}function c(e,t){for(var n=new Array(t);t--;)n[t]=e[t];return n}i.prototype=Object.create(null),o.EventEmitter=o,o.usingDomains=!1,o.prototype.domain=void 0,o.prototype._events=void 0,o.prototype._maxListeners=void 0,o.defaultMaxListeners=10,o.init=function(){this.domain=null,o.usingDomains&&undefined.active,this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=new i,this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},o.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||isNaN(e))throw new TypeError('"n" argument must be a positive number');return this._maxListeners=e,this},o.prototype.getMaxListeners=function(){return a(this)},o.prototype.emit=function(e){var t,n,r,i,o,a,s,u="error"===e;if(a=this._events)u=u&&null==a.error;else if(!u)return!1;if(s=this.domain,u){if(t=arguments[1],!s){if(t instanceof Error)throw t;var f=new Error('Uncaught, unspecified "error" event. ('+t+")");throw f.context=t,f}return t||(t=new Error('Uncaught, unspecified "error" event')),t.domainEmitter=this,t.domain=s,t.domainThrown=!1,s.emit("error",t),!1}if(!(n=a[e]))return!1;var h="function"==typeof n;switch(r=arguments.length){case 1:!function(e,t,n){if(t)e.call(n);else for(var r=e.length,i=c(e,r),o=0;o<r;++o)i[o].call(n)}(n,h,this);break;case 2:!function(e,t,n,r){if(t)e.call(n,r);else for(var i=e.length,o=c(e,i),a=0;a<i;++a)o[a].call(n,r)}(n,h,this,arguments[1]);break;case 3:!function(e,t,n,r,i){if(t)e.call(n,r,i);else for(var o=e.length,a=c(e,o),s=0;s<o;++s)a[s].call(n,r,i)}(n,h,this,arguments[1],arguments[2]);break;case 4:!function(e,t,n,r,i,o){if(t)e.call(n,r,i,o);else for(var a=e.length,s=c(e,a),u=0;u<a;++u)s[u].call(n,r,i,o)}(n,h,this,arguments[1],arguments[2],arguments[3]);break;default:for(i=new Array(r-1),o=1;o<r;o++)i[o-1]=arguments[o];!function(e,t,n,r){if(t)e.apply(n,r);else for(var i=e.length,o=c(e,i),a=0;a<i;++a)o[a].apply(n,r)}(n,h,this,i)}return!0},o.prototype.addListener=function(e,t){return s(this,e,t,!1)},o.prototype.on=o.prototype.addListener,o.prototype.prependListener=function(e,t){return s(this,e,t,!0)},o.prototype.once=function(e,t){if("function"!=typeof t)throw new TypeError('"listener" argument must be a function');return this.on(e,u(this,e,t)),this},o.prototype.prependOnceListener=function(e,t){if("function"!=typeof t)throw new TypeError('"listener" argument must be a function');return this.prependListener(e,u(this,e,t)),this},o.prototype.removeListener=function(e,t){var n,r,o,a,s;if("function"!=typeof t)throw new TypeError('"listener" argument must be a function');if(!(r=this._events))return this;if(!(n=r[e]))return this;if(n===t||n.listener&&n.listener===t)0==--this._eventsCount?this._events=new i:(delete r[e],r.removeListener&&this.emit("removeListener",e,n.listener||t));else if("function"!=typeof n){for(o=-1,a=n.length;a-- >0;)if(n[a]===t||n[a].listener&&n[a].listener===t){s=n[a].listener,o=a;break}if(o<0)return this;if(1===n.length){if(n[0]=void 0,0==--this._eventsCount)return this._events=new i,this;delete r[e]}else!function(e,t){for(var n=t,r=n+1,i=e.length;r<i;n+=1,r+=1)e[n]=e[r];e.pop()}(n,o);r.removeListener&&this.emit("removeListener",e,s||t)}return this},o.prototype.off=function(e,t){return this.removeListener(e,t)},o.prototype.removeAllListeners=function(e){var t,n;if(!(n=this._events))return this;if(!n.removeListener)return 0===arguments.length?(this._events=new i,this._eventsCount=0):n[e]&&(0==--this._eventsCount?this._events=new i:delete n[e]),this;if(0===arguments.length){for(var r,o=Object.keys(n),a=0;a<o.length;++a)"removeListener"!==(r=o[a])&&this.removeAllListeners(r);return this.removeAllListeners("removeListener"),this._events=new i,this._eventsCount=0,this}if("function"==typeof(t=n[e]))this.removeListener(e,t);else if(t)do{this.removeListener(e,t[t.length-1])}while(t[0]);return this},o.prototype.listeners=function(e){var t,n,r=this._events;return n=r&&(t=r[e])?"function"==typeof t?[t.listener||t]:function(e){for(var t=new Array(e.length),n=0;n<t.length;++n)t[n]=e[n].listener||e[n];return t}(t):[],n},o.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):f.call(e,t)},o.prototype.listenerCount=f,o.prototype.eventNames=function(){return this._eventsCount>0?Reflect.ownKeys(this._events):[]};var h="undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{},l=[],d=[],p="undefined"!=typeof Uint8Array?Uint8Array:Array,g=!1;function v(){g=!0;for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",t=0,n=e.length;t<n;++t)l[t]=e[t],d[e.charCodeAt(t)]=t;d["-".charCodeAt(0)]=62,d["_".charCodeAt(0)]=63}function y(e,t,n){for(var r,i,o=[],a=t;a<n;a+=3)r=(e[a]<<16)+(e[a+1]<<8)+e[a+2],o.push(l[(i=r)>>18&63]+l[i>>12&63]+l[i>>6&63]+l[63&i]);return o.join("")}function w(e){var t;g||v();for(var n=e.length,r=n%3,i="",o=[],a=16383,s=0,u=n-r;s<u;s+=a)o.push(y(e,s,s+a>u?u:s+a));return 1===r?(t=e[n-1],i+=l[t>>2],i+=l[t<<4&63],i+="=="):2===r&&(t=(e[n-2]<<8)+e[n-1],i+=l[t>>10],i+=l[t>>4&63],i+=l[t<<2&63],i+="="),o.push(i),o.join("")}function b(e,t,n,r,i){var o,a,s=8*i-r-1,u=(1<<s)-1,f=u>>1,c=-7,h=n?i-1:0,l=n?-1:1,d=e[t+h];for(h+=l,o=d&(1<<-c)-1,d>>=-c,c+=s;c>0;o=256*o+e[t+h],h+=l,c-=8);for(a=o&(1<<-c)-1,o>>=-c,c+=r;c>0;a=256*a+e[t+h],h+=l,c-=8);if(0===o)o=1-f;else{if(o===u)return a?NaN:1/0*(d?-1:1);a+=Math.pow(2,r),o-=f}return(d?-1:1)*a*Math.pow(2,o-r)}function m(e,t,n,r,i,o){var a,s,u,f=8*o-i-1,c=(1<<f)-1,h=c>>1,l=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,d=r?0:o-1,p=r?1:-1,g=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,a=c):(a=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-a))<1&&(a--,u*=2),(t+=a+h>=1?l/u:l*Math.pow(2,1-h))*u>=2&&(a++,u/=2),a+h>=c?(s=0,a=c):a+h>=1?(s=(t*u-1)*Math.pow(2,i),a+=h):(s=t*Math.pow(2,h-1)*Math.pow(2,i),a=0));i>=8;e[n+d]=255&s,d+=p,s/=256,i-=8);for(a=a<<i|s,f+=i;f>0;e[n+d]=255&a,d+=p,a/=256,f-=8);e[n+d-p]|=128*g}var _={}.toString,E=Array.isArray||function(e){return"[object Array]"==_.call(e)};function R(){return A.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function S(e,t){if(R()<t)throw new RangeError("Invalid typed array length");return A.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=A.prototype:(null===e&&(e=new A(t)),e.length=t),e}function A(e,t,n){if(!(A.TYPED_ARRAY_SUPPORT||this instanceof A))return new A(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return k(this,e)}return T(this,e,t,n)}function T(e,t,n,r){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r);A.TYPED_ARRAY_SUPPORT?(e=t).__proto__=A.prototype:e=P(e,t);return e}(e,t,n,r):"string"==typeof t?function(e,t,n){"string"==typeof n&&""!==n||(n="utf8");if(!A.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|x(t,n);e=S(e,r);var i=e.write(t,n);i!==r&&(e=e.slice(0,i));return e}(e,t,n):function(e,t){if(C(t)){var n=0|M(t.length);return 0===(e=S(e,n)).length||t.copy(e,0,0,n),e}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(r=t.length)!=r?S(e,0):P(e,t);if("Buffer"===t.type&&E(t.data))return P(e,t.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function L(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function k(e,t){if(L(t),e=S(e,t<0?0:0|M(t)),!A.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function P(e,t){var n=t.length<0?0:0|M(t.length);e=S(e,n);for(var r=0;r<n;r+=1)e[r]=255&t[r];return e}function M(e){if(e>=R())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+R().toString(16)+" bytes");return 0|e}function C(e){return!(null==e||!e._isBuffer)}function x(e,t){if(C(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return oe(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return ae(e).length;default:if(r)return oe(e).length;t=(""+t).toLowerCase(),r=!0}}function O(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return V(this,t,n);case"utf8":case"utf-8":return F(this,t,n);case"ascii":return G(this,t,n);case"latin1":case"binary":return J(this,t,n);case"base64":return W(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return $(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function j(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function B(e,t,n,r,i){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=i?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(i)return-1;n=e.length-1}else if(n<0){if(!i)return-1;n=0}if("string"==typeof t&&(t=A.from(t,r)),C(t))return 0===t.length?-1:U(e,t,n,r,i);if("number"==typeof t)return t&=255,A.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):U(e,[t],n,r,i);throw new TypeError("val must be string, number or Buffer")}function U(e,t,n,r,i){var o,a=1,s=e.length,u=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;a=2,s/=2,u/=2,n/=2}function f(e,t){return 1===a?e[t]:e.readUInt16BE(t*a)}if(i){var c=-1;for(o=n;o<s;o++)if(f(e,o)===f(t,-1===c?0:o-c)){if(-1===c&&(c=o),o-c+1===u)return c*a}else-1!==c&&(o-=o-c),c=-1}else for(n+u>s&&(n=s-u),o=n;o>=0;o--){for(var h=!0,l=0;l<u;l++)if(f(e,o+l)!==f(t,l)){h=!1;break}if(h)return o}return-1}function I(e,t,n,r){n=Number(n)||0;var i=e.length-n;r?(r=Number(r))>i&&(r=i):r=i;var o=t.length;if(o%2!=0)throw new TypeError("Invalid hex string");r>o/2&&(r=o/2);for(var a=0;a<r;++a){var s=parseInt(t.substr(2*a,2),16);if(isNaN(s))return a;e[n+a]=s}return a}function D(e,t,n,r){return se(oe(t,e.length-n),e,n,r)}function q(e,t,n,r){return se(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function Y(e,t,n,r){return q(e,t,n,r)}function z(e,t,n,r){return se(ae(t),e,n,r)}function N(e,t,n,r){return se(function(e,t){for(var n,r,i,o=[],a=0;a<e.length&&!((t-=2)<0);++a)r=(n=e.charCodeAt(a))>>8,i=n%256,o.push(i),o.push(r);return o}(t,e.length-n),e,n,r)}function W(e,t,n){return 0===t&&n===e.length?w(e):w(e.slice(t,n))}function F(e,t,n){n=Math.min(e.length,n);for(var r=[],i=t;i<n;){var o,a,s,u,f=e[i],c=null,h=f>239?4:f>223?3:f>191?2:1;if(i+h<=n)switch(h){case 1:f<128&&(c=f);break;case 2:128==(192&(o=e[i+1]))&&(u=(31&f)<<6|63&o)>127&&(c=u);break;case 3:o=e[i+1],a=e[i+2],128==(192&o)&&128==(192&a)&&(u=(15&f)<<12|(63&o)<<6|63&a)>2047&&(u<55296||u>57343)&&(c=u);break;case 4:o=e[i+1],a=e[i+2],s=e[i+3],128==(192&o)&&128==(192&a)&&128==(192&s)&&(u=(15&f)<<18|(63&o)<<12|(63&a)<<6|63&s)>65535&&u<1114112&&(c=u)}null===c?(c=65533,h=1):c>65535&&(c-=65536,r.push(c>>>10&1023|55296),c=56320|1023&c),r.push(c),i+=h}return function(e){var t=e.length;if(t<=H)return String.fromCharCode.apply(String,e);var n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=H));return n}(r)}A.TYPED_ARRAY_SUPPORT=void 0===h.TYPED_ARRAY_SUPPORT||h.TYPED_ARRAY_SUPPORT,R(),A.poolSize=8192,A._augment=function(e){return e.__proto__=A.prototype,e},A.from=function(e,t,n){return T(null,e,t,n)},A.TYPED_ARRAY_SUPPORT&&(A.prototype.__proto__=Uint8Array.prototype,A.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&A[Symbol.species]),A.alloc=function(e,t,n){return function(e,t,n,r){return L(t),t<=0?S(e,t):void 0!==n?"string"==typeof r?S(e,t).fill(n,r):S(e,t).fill(n):S(e,t)}(null,e,t,n)},A.allocUnsafe=function(e){return k(null,e)},A.allocUnsafeSlow=function(e){return k(null,e)},A.isBuffer=function(e){return null!=e&&(!!e._isBuffer||ue(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&ue(e.slice(0,0))}(e))},A.compare=function(e,t){if(!C(e)||!C(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,r=t.length,i=0,o=Math.min(n,r);i<o;++i)if(e[i]!==t[i]){n=e[i],r=t[i];break}return n<r?-1:r<n?1:0},A.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},A.concat=function(e,t){if(!E(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return A.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=A.allocUnsafe(t),i=0;for(n=0;n<e.length;++n){var o=e[n];if(!C(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(r,i),i+=o.length}return r},A.byteLength=x,A.prototype._isBuffer=!0,A.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)j(this,t,t+1);return this},A.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)j(this,t,t+3),j(this,t+1,t+2);return this},A.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)j(this,t,t+7),j(this,t+1,t+6),j(this,t+2,t+5),j(this,t+3,t+4);return this},A.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?F(this,0,e):O.apply(this,arguments)},A.prototype.equals=function(e){if(!C(e))throw new TypeError("Argument must be a Buffer");return this===e||0===A.compare(this,e)},A.prototype.inspect=function(){var e="";return this.length>0&&(e=this.toString("hex",0,50).match(/.{2}/g).join(" "),this.length>50&&(e+=" ... ")),"<Buffer "+e+">"},A.prototype.compare=function(e,t,n,r,i){if(!C(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===i&&(i=this.length),t<0||n>e.length||r<0||i>this.length)throw new RangeError("out of range index");if(r>=i&&t>=n)return 0;if(r>=i)return-1;if(t>=n)return 1;if(this===e)return 0;for(var o=(i>>>=0)-(r>>>=0),a=(n>>>=0)-(t>>>=0),s=Math.min(o,a),u=this.slice(r,i),f=e.slice(t,n),c=0;c<s;++c)if(u[c]!==f[c]){o=u[c],a=f[c];break}return o<a?-1:a<o?1:0},A.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},A.prototype.indexOf=function(e,t,n){return B(this,e,t,n,!0)},A.prototype.lastIndexOf=function(e,t,n){return B(this,e,t,n,!1)},A.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var i=this.length-t;if((void 0===n||n>i)&&(n=i),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var o=!1;;)switch(r){case"hex":return I(this,e,t,n);case"utf8":case"utf-8":return D(this,e,t,n);case"ascii":return q(this,e,t,n);case"latin1":case"binary":return Y(this,e,t,n);case"base64":return z(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return N(this,e,t,n);default:if(o)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),o=!0}},A.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var H=4096;function G(e,t,n){var r="";n=Math.min(e.length,n);for(var i=t;i<n;++i)r+=String.fromCharCode(127&e[i]);return r}function J(e,t,n){var r="";n=Math.min(e.length,n);for(var i=t;i<n;++i)r+=String.fromCharCode(e[i]);return r}function V(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var i="",o=t;o<n;++o)i+=ie(e[o]);return i}function $(e,t,n){for(var r=e.slice(t,n),i="",o=0;o<r.length;o+=2)i+=String.fromCharCode(r[o]+256*r[o+1]);return i}function Z(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function K(e,t,n,r,i,o){if(!C(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>i||t<o)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function Q(e,t,n,r){t<0&&(t=65535+t+1);for(var i=0,o=Math.min(e.length-n,2);i<o;++i)e[n+i]=(t&255<<8*(r?i:1-i))>>>8*(r?i:1-i)}function X(e,t,n,r){t<0&&(t=4294967295+t+1);for(var i=0,o=Math.min(e.length-n,4);i<o;++i)e[n+i]=t>>>8*(r?i:3-i)&255}function ee(e,t,n,r,i,o){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function te(e,t,n,r,i){return i||ee(e,0,n,4),m(e,t,n,r,23,4),n+4}function ne(e,t,n,r,i){return i||ee(e,0,n,8),m(e,t,n,r,52,8),n+8}A.prototype.slice=function(e,t){var n,r=this.length;if((e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e),A.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=A.prototype;else{var i=t-e;n=new A(i,void 0);for(var o=0;o<i;++o)n[o]=this[o+e]}return n},A.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||Z(e,t,this.length);for(var r=this[e],i=1,o=0;++o<t&&(i*=256);)r+=this[e+o]*i;return r},A.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||Z(e,t,this.length);for(var r=this[e+--t],i=1;t>0&&(i*=256);)r+=this[e+--t]*i;return r},A.prototype.readUInt8=function(e,t){return t||Z(e,1,this.length),this[e]},A.prototype.readUInt16LE=function(e,t){return t||Z(e,2,this.length),this[e]|this[e+1]<<8},A.prototype.readUInt16BE=function(e,t){return t||Z(e,2,this.length),this[e]<<8|this[e+1]},A.prototype.readUInt32LE=function(e,t){return t||Z(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},A.prototype.readUInt32BE=function(e,t){return t||Z(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},A.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||Z(e,t,this.length);for(var r=this[e],i=1,o=0;++o<t&&(i*=256);)r+=this[e+o]*i;return r>=(i*=128)&&(r-=Math.pow(2,8*t)),r},A.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||Z(e,t,this.length);for(var r=t,i=1,o=this[e+--r];r>0&&(i*=256);)o+=this[e+--r]*i;return o>=(i*=128)&&(o-=Math.pow(2,8*t)),o},A.prototype.readInt8=function(e,t){return t||Z(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},A.prototype.readInt16LE=function(e,t){t||Z(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},A.prototype.readInt16BE=function(e,t){t||Z(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},A.prototype.readInt32LE=function(e,t){return t||Z(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},A.prototype.readInt32BE=function(e,t){return t||Z(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},A.prototype.readFloatLE=function(e,t){return t||Z(e,4,this.length),b(this,e,!0,23,4)},A.prototype.readFloatBE=function(e,t){return t||Z(e,4,this.length),b(this,e,!1,23,4)},A.prototype.readDoubleLE=function(e,t){return t||Z(e,8,this.length),b(this,e,!0,52,8)},A.prototype.readDoubleBE=function(e,t){return t||Z(e,8,this.length),b(this,e,!1,52,8)},A.prototype.writeUIntLE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||K(this,e,t,n,Math.pow(2,8*n)-1,0);var i=1,o=0;for(this[t]=255&e;++o<n&&(i*=256);)this[t+o]=e/i&255;return t+n},A.prototype.writeUIntBE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||K(this,e,t,n,Math.pow(2,8*n)-1,0);var i=n-1,o=1;for(this[t+i]=255&e;--i>=0&&(o*=256);)this[t+i]=e/o&255;return t+n},A.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||K(this,e,t,1,255,0),A.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},A.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||K(this,e,t,2,65535,0),A.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):Q(this,e,t,!0),t+2},A.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||K(this,e,t,2,65535,0),A.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):Q(this,e,t,!1),t+2},A.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||K(this,e,t,4,4294967295,0),A.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):X(this,e,t,!0),t+4},A.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||K(this,e,t,4,4294967295,0),A.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):X(this,e,t,!1),t+4},A.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var i=Math.pow(2,8*n-1);K(this,e,t,n,i-1,-i)}var o=0,a=1,s=0;for(this[t]=255&e;++o<n&&(a*=256);)e<0&&0===s&&0!==this[t+o-1]&&(s=1),this[t+o]=(e/a>>0)-s&255;return t+n},A.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var i=Math.pow(2,8*n-1);K(this,e,t,n,i-1,-i)}var o=n-1,a=1,s=0;for(this[t+o]=255&e;--o>=0&&(a*=256);)e<0&&0===s&&0!==this[t+o+1]&&(s=1),this[t+o]=(e/a>>0)-s&255;return t+n},A.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||K(this,e,t,1,127,-128),A.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},A.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||K(this,e,t,2,32767,-32768),A.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):Q(this,e,t,!0),t+2},A.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||K(this,e,t,2,32767,-32768),A.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):Q(this,e,t,!1),t+2},A.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||K(this,e,t,4,2147483647,-2147483648),A.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):X(this,e,t,!0),t+4},A.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||K(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),A.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):X(this,e,t,!1),t+4},A.prototype.writeFloatLE=function(e,t,n){return te(this,e,t,!0,n)},A.prototype.writeFloatBE=function(e,t,n){return te(this,e,t,!1,n)},A.prototype.writeDoubleLE=function(e,t,n){return ne(this,e,t,!0,n)},A.prototype.writeDoubleBE=function(e,t,n){return ne(this,e,t,!1,n)},A.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var i,o=r-n;if(this===e&&n<t&&t<r)for(i=o-1;i>=0;--i)e[i+t]=this[i+n];else if(o<1e3||!A.TYPED_ARRAY_SUPPORT)for(i=0;i<o;++i)e[i+t]=this[i+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+o),t);return o},A.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===e.length){var i=e.charCodeAt(0);i<256&&(e=i)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!A.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var o;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(o=t;o<n;++o)this[o]=e;else{var a=C(e)?e:oe(new A(e,r).toString()),s=a.length;for(o=0;o<n-t;++o)this[o+t]=a[o%s]}return this};var re=/[^+\/0-9A-Za-z-_]/g;function ie(e){return e<16?"0"+e.toString(16):e.toString(16)}function oe(e,t){var n;t=t||1/0;for(var r=e.length,i=null,o=[],a=0;a<r;++a){if((n=e.charCodeAt(a))>55295&&n<57344){if(!i){if(n>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(a+1===r){(t-=3)>-1&&o.push(239,191,189);continue}i=n;continue}if(n<56320){(t-=3)>-1&&o.push(239,191,189),i=n;continue}n=65536+(i-55296<<10|n-56320)}else i&&(t-=3)>-1&&o.push(239,191,189);if(i=null,n<128){if((t-=1)<0)break;o.push(n)}else if(n<2048){if((t-=2)<0)break;o.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;o.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return o}function ae(e){return function(e){var t,n,r,i,o,a;g||v();var s=e.length;if(s%4>0)throw new Error("Invalid string. Length must be a multiple of 4");o="="===e[s-2]?2:"="===e[s-1]?1:0,a=new p(3*s/4-o),r=o>0?s-4:s;var u=0;for(t=0,n=0;t<r;t+=4,n+=3)i=d[e.charCodeAt(t)]<<18|d[e.charCodeAt(t+1)]<<12|d[e.charCodeAt(t+2)]<<6|d[e.charCodeAt(t+3)],a[u++]=i>>16&255,a[u++]=i>>8&255,a[u++]=255&i;return 2===o?(i=d[e.charCodeAt(t)]<<2|d[e.charCodeAt(t+1)]>>4,a[u++]=255&i):1===o&&(i=d[e.charCodeAt(t)]<<10|d[e.charCodeAt(t+1)]<<4|d[e.charCodeAt(t+2)]>>2,a[u++]=i>>8&255,a[u++]=255&i),a}(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(re,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function se(e,t,n,r){for(var i=0;i<r&&!(i+n>=t.length||i>=e.length);++i)t[i+n]=e[i];return i}function ue(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}function fe(){throw new Error("setTimeout has not been defined")}function ce(){throw new Error("clearTimeout has not been defined")}var he=fe,le=ce;function de(e){if(he===setTimeout)return setTimeout(e,0);if((he===fe||!he)&&setTimeout)return he=setTimeout,setTimeout(e,0);try{return he(e,0)}catch(t){try{return he.call(null,e,0)}catch(t){return he.call(this,e,0)}}}"function"==typeof h.setTimeout&&(he=setTimeout),"function"==typeof h.clearTimeout&&(le=clearTimeout);var pe,ge=[],ve=!1,ye=-1;function we(){ve&&pe&&(ve=!1,pe.length?ge=pe.concat(ge):ye=-1,ge.length&&be())}function be(){if(!ve){var e=de(we);ve=!0;for(var t=ge.length;t;){for(pe=ge,ge=[];++ye<t;)pe&&pe[ye].run();ye=-1,t=ge.length}pe=null,ve=!1,function(e){if(le===clearTimeout)return clearTimeout(e);if((le===ce||!le)&&clearTimeout)return le=clearTimeout,clearTimeout(e);try{le(e)}catch(t){try{return le.call(null,e)}catch(t){return le.call(this,e)}}}(e)}}function me(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];ge.push(new _e(e,t)),1!==ge.length||ve||de(be)}function _e(e,t){this.fun=e,this.array=t}_e.prototype.run=function(){this.fun.apply(null,this.array)};function Ee(){}var Re=Ee,Se=Ee,Ae=Ee,Te=Ee,Le=Ee,ke=Ee,Pe=Ee;var Me=h.performance||{},Ce=Me.now||Me.mozNow||Me.msNow||Me.oNow||Me.webkitNow||function(){return(new Date).getTime()};var xe=new Date;var Oe={nextTick:me,title:"browser",browser:!0,env:{},argv:[],version:"",versions:{},on:Re,addListener:Se,once:Ae,off:Te,removeListener:Le,removeAllListeners:ke,emit:Pe,binding:function(e){throw new Error("process.binding is not supported")},cwd:function(){return"/"},chdir:function(e){throw new Error("process.chdir is not supported")},umask:function(){return 0},hrtime:function(e){var t=.001*Ce.call(Me),n=Math.floor(t),r=Math.floor(t%1*1e9);return e&&(n-=e[0],(r-=e[1])<0&&(n--,r+=1e9)),[n,r]},platform:"browser",release:{},config:{},uptime:function(){return(new Date-xe)/1e3}},je="function"==typeof Object.create?function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}:function(e,t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e},Be=/%[sdj%]/g;function Ue(e){if(!Ve(e)){for(var t=[],n=0;n<arguments.length;n++)t.push(Ye(arguments[n]));return t.join(" ")}n=1;for(var r=arguments,i=r.length,o=String(e).replace(Be,(function(e){if("%%"===e)return"%";if(n>=i)return e;switch(e){case"%s":return String(r[n++]);case"%d":return Number(r[n++]);case"%j":try{return JSON.stringify(r[n++])}catch(e){return"[Circular]"}default:return e}})),a=r[n];n<i;a=r[++n])Je(a)||!Ke(a)?o+=" "+a:o+=" "+Ye(a);return o}function Ie(e,t){if($e(h.process))return function(){return Ie(e,t).apply(this,arguments)};if(!0===Oe.noDeprecation)return e;var n=!1;return function(){if(!n){if(Oe.throwDeprecation)throw new Error(t);Oe.traceDeprecation?console.trace(t):console.error(t),n=!0}return e.apply(this,arguments)}}var De,qe={};function Ye(e,t){var n={seen:[],stylize:Ne};return arguments.length>=3&&(n.depth=arguments[2]),arguments.length>=4&&(n.colors=arguments[3]),Ge(t)?n.showHidden=t:t&&function(e,t){if(!t||!Ke(t))return e;var n=Object.keys(t),r=n.length;for(;r--;)e[n[r]]=t[n[r]]}(n,t),$e(n.showHidden)&&(n.showHidden=!1),$e(n.depth)&&(n.depth=2),$e(n.colors)&&(n.colors=!1),$e(n.customInspect)&&(n.customInspect=!0),n.colors&&(n.stylize=ze),We(n,e,n.depth)}function ze(e,t){var n=Ye.styles[t];return n?"["+Ye.colors[n][0]+"m"+e+"["+Ye.colors[n][1]+"m":e}function Ne(e,t){return e}function We(e,t,n){if(e.customInspect&&t&&et(t.inspect)&&t.inspect!==Ye&&(!t.constructor||t.constructor.prototype!==t)){var r=t.inspect(n,e);return Ve(r)||(r=We(e,r,n)),r}var i=function(e,t){if($e(t))return e.stylize("undefined","undefined");if(Ve(t)){var n="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(n,"string")}if(r=t,"number"==typeof r)return e.stylize(""+t,"number");var r;if(Ge(t))return e.stylize(""+t,"boolean");if(Je(t))return e.stylize("null","null")}(e,t);if(i)return i;var o=Object.keys(t),a=function(e){var t={};return e.forEach((function(e,n){t[e]=!0})),t}(o);if(e.showHidden&&(o=Object.getOwnPropertyNames(t)),Xe(t)&&(o.indexOf("message")>=0||o.indexOf("description")>=0))return Fe(t);if(0===o.length){if(et(t)){var s=t.name?": "+t.name:"";return e.stylize("[Function"+s+"]","special")}if(Ze(t))return e.stylize(RegExp.prototype.toString.call(t),"regexp");if(Qe(t))return e.stylize(Date.prototype.toString.call(t),"date");if(Xe(t))return Fe(t)}var u,f,c="",h=!1,l=["{","}"];(u=t,Array.isArray(u)&&(h=!0,l=["[","]"]),et(t))&&(c=" [Function"+(t.name?": "+t.name:"")+"]");return Ze(t)&&(c=" "+RegExp.prototype.toString.call(t)),Qe(t)&&(c=" "+Date.prototype.toUTCString.call(t)),Xe(t)&&(c=" "+Fe(t)),0!==o.length||h&&0!=t.length?n<0?Ze(t)?e.stylize(RegExp.prototype.toString.call(t),"regexp"):e.stylize("[Object]","special"):(e.seen.push(t),f=h?function(e,t,n,r,i){for(var o=[],a=0,s=t.length;a<s;++a)nt(t,String(a))?o.push(He(e,t,n,r,String(a),!0)):o.push("");return i.forEach((function(i){i.match(/^\d+$/)||o.push(He(e,t,n,r,i,!0))})),o}(e,t,n,a,o):o.map((function(r){return He(e,t,n,a,r,h)})),e.seen.pop(),function(e,t,n){var r=e.reduce((function(e,t){return t.indexOf("\n"),e+t.replace(/\u001b\[\d\d?m/g,"").length+1}),0);if(r>60)return n[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+n[1];return n[0]+t+" "+e.join(", ")+" "+n[1]}(f,c,l)):l[0]+c+l[1]}function Fe(e){return"["+Error.prototype.toString.call(e)+"]"}function He(e,t,n,r,i,o){var a,s,u;if((u=Object.getOwnPropertyDescriptor(t,i)||{value:t[i]}).get?s=u.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):u.set&&(s=e.stylize("[Setter]","special")),nt(r,i)||(a="["+i+"]"),s||(e.seen.indexOf(u.value)<0?(s=Je(n)?We(e,u.value,null):We(e,u.value,n-1)).indexOf("\n")>-1&&(s=o?s.split("\n").map((function(e){return"  "+e})).join("\n").substr(2):"\n"+s.split("\n").map((function(e){return"   "+e})).join("\n")):s=e.stylize("[Circular]","special")),$e(a)){if(o&&i.match(/^\d+$/))return s;(a=JSON.stringify(""+i)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(a=a.substr(1,a.length-2),a=e.stylize(a,"name")):(a=a.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),a=e.stylize(a,"string"))}return a+": "+s}function Ge(e){return"boolean"==typeof e}function Je(e){return null===e}function Ve(e){return"string"==typeof e}function $e(e){return void 0===e}function Ze(e){return Ke(e)&&"[object RegExp]"===tt(e)}function Ke(e){return"object"==typeof e&&null!==e}function Qe(e){return Ke(e)&&"[object Date]"===tt(e)}function Xe(e){return Ke(e)&&("[object Error]"===tt(e)||e instanceof Error)}function et(e){return"function"==typeof e}function tt(e){return Object.prototype.toString.call(e)}function nt(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function rt(){this.head=null,this.tail=null,this.length=0}Ye.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},Ye.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},rt.prototype.push=function(e){var t={data:e,next:null};this.length>0?this.tail.next=t:this.head=t,this.tail=t,++this.length},rt.prototype.unshift=function(e){var t={data:e,next:this.head};0===this.length&&(this.tail=t),this.head=t,++this.length},rt.prototype.shift=function(){if(0!==this.length){var e=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,e}},rt.prototype.clear=function(){this.head=this.tail=null,this.length=0},rt.prototype.join=function(e){if(0===this.length)return"";for(var t=this.head,n=""+t.data;t=t.next;)n+=e+t.data;return n},rt.prototype.concat=function(e){if(0===this.length)return A.alloc(0);if(1===this.length)return this.head.data;for(var t=A.allocUnsafe(e>>>0),n=this.head,r=0;n;)n.data.copy(t,r),r+=n.data.length,n=n.next;return t};var it=A.isEncoding||function(e){switch(e&&e.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function ot(e){switch(this.encoding=(e||"utf8").toLowerCase().replace(/[-_]/,""),function(e){if(e&&!it(e))throw new Error("Unknown encoding: "+e)}(e),this.encoding){case"utf8":this.surrogateSize=3;break;case"ucs2":case"utf16le":this.surrogateSize=2,this.detectIncompleteChar=st;break;case"base64":this.surrogateSize=3,this.detectIncompleteChar=ut;break;default:return void(this.write=at)}this.charBuffer=new A(6),this.charReceived=0,this.charLength=0}function at(e){return e.toString(this.encoding)}function st(e){this.charReceived=e.length%2,this.charLength=this.charReceived?2:0}function ut(e){this.charReceived=e.length%3,this.charLength=this.charReceived?3:0}ot.prototype.write=function(e){for(var t="";this.charLength;){var n=e.length>=this.charLength-this.charReceived?this.charLength-this.charReceived:e.length;if(e.copy(this.charBuffer,this.charReceived,0,n),this.charReceived+=n,this.charReceived<this.charLength)return"";if(e=e.slice(n,e.length),!((i=(t=this.charBuffer.slice(0,this.charLength).toString(this.encoding)).charCodeAt(t.length-1))>=55296&&i<=56319)){if(this.charReceived=this.charLength=0,0===e.length)return t;break}this.charLength+=this.surrogateSize,t=""}this.detectIncompleteChar(e);var r=e.length;this.charLength&&(e.copy(this.charBuffer,0,e.length-this.charReceived,r),r-=this.charReceived);var i;r=(t+=e.toString(this.encoding,0,r)).length-1;if((i=t.charCodeAt(r))>=55296&&i<=56319){var o=this.surrogateSize;return this.charLength+=o,this.charReceived+=o,this.charBuffer.copy(this.charBuffer,o,0,o),e.copy(this.charBuffer,0,0,o),t.substring(0,r)}return t},ot.prototype.detectIncompleteChar=function(e){for(var t=e.length>=3?3:e.length;t>0;t--){var n=e[e.length-t];if(1==t&&n>>5==6){this.charLength=2;break}if(t<=2&&n>>4==14){this.charLength=3;break}if(t<=3&&n>>3==30){this.charLength=4;break}}this.charReceived=t},ot.prototype.end=function(e){var t="";if(e&&e.length&&(t=this.write(e)),this.charReceived){var n=this.charReceived,r=this.charBuffer,i=this.encoding;t+=r.slice(0,n).toString(i)}return t},ht.ReadableState=ct;var ft=function(e){if($e(De)&&(De=Oe.env.NODE_DEBUG||""),e=e.toUpperCase(),!qe[e])if(new RegExp("\\b"+e+"\\b","i").test(De)){var t=0;qe[e]=function(){var n=Ue.apply(null,arguments);console.error("%s %d: %s",e,t,n)}}else qe[e]=function(){};return qe[e]}("stream");function ct(e,t){e=e||{},this.objectMode=!!e.objectMode,t instanceof qt&&(this.objectMode=this.objectMode||!!e.readableObjectMode);var n=e.highWaterMark,r=this.objectMode?16:16384;this.highWaterMark=n||0===n?n:r,this.highWaterMark=~~this.highWaterMark,this.buffer=new rt,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.defaultEncoding=e.defaultEncoding||"utf8",this.ranOut=!1,this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,e.encoding&&(this.decoder=new ot(e.encoding),this.encoding=e.encoding)}function ht(e){if(!(this instanceof ht))return new ht(e);this._readableState=new ct(e,this),this.readable=!0,e&&"function"==typeof e.read&&(this._read=e.read),o.call(this)}function lt(e,t,n,r,i){var o=function(e,t){var n=null;A.isBuffer(t)||"string"==typeof t||null==t||e.objectMode||(n=new TypeError("Invalid non-string/buffer chunk"));return n}(t,n);if(o)e.emit("error",o);else if(null===n)t.reading=!1,function(e,t){if(t.ended)return;if(t.decoder){var n=t.decoder.end();n&&n.length&&(t.buffer.push(n),t.length+=t.objectMode?1:n.length)}t.ended=!0,gt(e)}(e,t);else if(t.objectMode||n&&n.length>0)if(t.ended&&!i){var a=new Error("stream.push() after EOF");e.emit("error",a)}else if(t.endEmitted&&i){var s=new Error("stream.unshift() after end event");e.emit("error",s)}else{var u;!t.decoder||i||r||(n=t.decoder.write(n),u=!t.objectMode&&0===n.length),i||(t.reading=!1),u||(t.flowing&&0===t.length&&!t.sync?(e.emit("data",n),e.read(0)):(t.length+=t.objectMode?1:n.length,i?t.buffer.unshift(n):t.buffer.push(n),t.needReadable&&gt(e))),function(e,t){t.readingMore||(t.readingMore=!0,me(yt,e,t))}(e,t)}else i||(t.reading=!1);return function(e){return!e.ended&&(e.needReadable||e.length<e.highWaterMark||0===e.length)}(t)}je(ht,o),ht.prototype.push=function(e,t){var n=this._readableState;return n.objectMode||"string"!=typeof e||(t=t||n.defaultEncoding)!==n.encoding&&(e=A.from(e,t),t=""),lt(this,n,e,t,!1)},ht.prototype.unshift=function(e){return lt(this,this._readableState,e,"",!0)},ht.prototype.isPaused=function(){return!1===this._readableState.flowing},ht.prototype.setEncoding=function(e){return this._readableState.decoder=new ot(e),this._readableState.encoding=e,this};var dt=8388608;function pt(e,t){return e<=0||0===t.length&&t.ended?0:t.objectMode?1:e!=e?t.flowing&&t.length?t.buffer.head.data.length:t.length:(e>t.highWaterMark&&(t.highWaterMark=function(e){return e>=dt?e=dt:(e--,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e++),e}(e)),e<=t.length?e:t.ended?t.length:(t.needReadable=!0,0))}function gt(e){var t=e._readableState;t.needReadable=!1,t.emittedReadable||(ft("emitReadable",t.flowing),t.emittedReadable=!0,t.sync?me(vt,e):vt(e))}function vt(e){ft("emit readable"),e.emit("readable"),mt(e)}function yt(e,t){for(var n=t.length;!t.reading&&!t.flowing&&!t.ended&&t.length<t.highWaterMark&&(ft("maybeReadMore read 0"),e.read(0),n!==t.length);)n=t.length;t.readingMore=!1}function wt(e){ft("readable nexttick read 0"),e.read(0)}function bt(e,t){t.reading||(ft("resume read 0"),e.read(0)),t.resumeScheduled=!1,t.awaitDrain=0,e.emit("resume"),mt(e),t.flowing&&!t.reading&&e.read(0)}function mt(e){var t=e._readableState;for(ft("flow",t.flowing);t.flowing&&null!==e.read(););}function _t(e,t){return 0===t.length?null:(t.objectMode?n=t.buffer.shift():!e||e>=t.length?(n=t.decoder?t.buffer.join(""):1===t.buffer.length?t.buffer.head.data:t.buffer.concat(t.length),t.buffer.clear()):n=function(e,t,n){var r;e<t.head.data.length?(r=t.head.data.slice(0,e),t.head.data=t.head.data.slice(e)):r=e===t.head.data.length?t.shift():n?function(e,t){var n=t.head,r=1,i=n.data;e-=i.length;for(;n=n.next;){var o=n.data,a=e>o.length?o.length:e;if(a===o.length?i+=o:i+=o.slice(0,e),0===(e-=a)){a===o.length?(++r,n.next?t.head=n.next:t.head=t.tail=null):(t.head=n,n.data=o.slice(a));break}++r}return t.length-=r,i}(e,t):function(e,t){var n=A.allocUnsafe(e),r=t.head,i=1;r.data.copy(n),e-=r.data.length;for(;r=r.next;){var o=r.data,a=e>o.length?o.length:e;if(o.copy(n,n.length-e,0,a),0===(e-=a)){a===o.length?(++i,r.next?t.head=r.next:t.head=t.tail=null):(t.head=r,r.data=o.slice(a));break}++i}return t.length-=i,n}(e,t);return r}(e,t.buffer,t.decoder),n);var n}function Et(e){var t=e._readableState;if(t.length>0)throw new Error('"endReadable()" called on non-empty stream');t.endEmitted||(t.ended=!0,me(Rt,t,e))}function Rt(e,t){e.endEmitted||0!==e.length||(e.endEmitted=!0,t.readable=!1,t.emit("end"))}function St(e,t){for(var n=0,r=e.length;n<r;n++)if(e[n]===t)return n;return-1}function At(){}function Tt(e,t,n){this.chunk=e,this.encoding=t,this.callback=n,this.next=null}function Lt(e,t){Object.defineProperty(this,"buffer",{get:Ie((function(){return this.getBuffer()}),"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.")}),e=e||{},this.objectMode=!!e.objectMode,t instanceof qt&&(this.objectMode=this.objectMode||!!e.writableObjectMode);var n=e.highWaterMark,r=this.objectMode?16:16384;this.highWaterMark=n||0===n?n:r,this.highWaterMark=~~this.highWaterMark,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1;var i=!1===e.decodeStrings;this.decodeStrings=!i,this.defaultEncoding=e.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(e){!function(e,t){var n=e._writableState,r=n.sync,i=n.writecb;if(function(e){e.writing=!1,e.writecb=null,e.length-=e.writelen,e.writelen=0}(n),t)!function(e,t,n,r,i){--t.pendingcb,n?me(i,r):i(r);e._writableState.errorEmitted=!0,e.emit("error",r)}(e,n,r,t,i);else{var o=xt(n);o||n.corked||n.bufferProcessing||!n.bufferedRequest||Ct(e,n),r?me(Mt,e,n,o,i):Mt(e,n,o,i)}}(t,e)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.bufferedRequestCount=0,this.corkedRequestsFree=new Bt(this)}function kt(e){if(!(this instanceof kt||this instanceof qt))return new kt(e);this._writableState=new Lt(e,this),this.writable=!0,e&&("function"==typeof e.write&&(this._write=e.write),"function"==typeof e.writev&&(this._writev=e.writev)),o.call(this)}function Pt(e,t,n,r,i,o,a){t.writelen=r,t.writecb=a,t.writing=!0,t.sync=!0,n?e._writev(i,t.onwrite):e._write(i,o,t.onwrite),t.sync=!1}function Mt(e,t,n,r){n||function(e,t){0===t.length&&t.needDrain&&(t.needDrain=!1,e.emit("drain"))}(e,t),t.pendingcb--,r(),jt(e,t)}function Ct(e,t){t.bufferProcessing=!0;var n=t.bufferedRequest;if(e._writev&&n&&n.next){var r=t.bufferedRequestCount,i=new Array(r),o=t.corkedRequestsFree;o.entry=n;for(var a=0;n;)i[a]=n,n=n.next,a+=1;Pt(e,t,!0,t.length,i,"",o.finish),t.pendingcb++,t.lastBufferedRequest=null,o.next?(t.corkedRequestsFree=o.next,o.next=null):t.corkedRequestsFree=new Bt(t)}else{for(;n;){var s=n.chunk,u=n.encoding,f=n.callback;if(Pt(e,t,!1,t.objectMode?1:s.length,s,u,f),n=n.next,t.writing)break}null===n&&(t.lastBufferedRequest=null)}t.bufferedRequestCount=0,t.bufferedRequest=n,t.bufferProcessing=!1}function xt(e){return e.ending&&0===e.length&&null===e.bufferedRequest&&!e.finished&&!e.writing}function Ot(e,t){t.prefinished||(t.prefinished=!0,e.emit("prefinish"))}function jt(e,t){var n=xt(t);return n&&(0===t.pendingcb?(Ot(e,t),t.finished=!0,e.emit("finish")):Ot(e,t)),n}function Bt(e){var t=this;this.next=null,this.entry=null,this.finish=function(n){var r=t.entry;for(t.entry=null;r;){var i=r.callback;e.pendingcb--,i(n),r=r.next}e.corkedRequestsFree?e.corkedRequestsFree.next=t:e.corkedRequestsFree=t}}ht.prototype.read=function(e){ft("read",e),e=parseInt(e,10);var t=this._readableState,n=e;if(0!==e&&(t.emittedReadable=!1),0===e&&t.needReadable&&(t.length>=t.highWaterMark||t.ended))return ft("read: emitReadable",t.length,t.ended),0===t.length&&t.ended?Et(this):gt(this),null;if(0===(e=pt(e,t))&&t.ended)return 0===t.length&&Et(this),null;var r,i=t.needReadable;return ft("need readable",i),(0===t.length||t.length-e<t.highWaterMark)&&ft("length less than watermark",i=!0),t.ended||t.reading?ft("reading or ended",i=!1):i&&(ft("do read"),t.reading=!0,t.sync=!0,0===t.length&&(t.needReadable=!0),this._read(t.highWaterMark),t.sync=!1,t.reading||(e=pt(n,t))),null===(r=e>0?_t(e,t):null)?(t.needReadable=!0,e=0):t.length-=e,0===t.length&&(t.ended||(t.needReadable=!0),n!==e&&t.ended&&Et(this)),null!==r&&this.emit("data",r),r},ht.prototype._read=function(e){this.emit("error",new Error("not implemented"))},ht.prototype.pipe=function(e,t){var n=this,r=this._readableState;switch(r.pipesCount){case 0:r.pipes=e;break;case 1:r.pipes=[r.pipes,e];break;default:r.pipes.push(e)}r.pipesCount+=1,ft("pipe count=%d opts=%j",r.pipesCount,t);var i=!t||!1!==t.end?a:f;function o(e){ft("onunpipe"),e===n&&f()}function a(){ft("onend"),e.end()}r.endEmitted?me(i):n.once("end",i),e.on("unpipe",o);var s=function(e){return function(){var t=e._readableState;ft("pipeOnDrain",t.awaitDrain),t.awaitDrain&&t.awaitDrain--,0===t.awaitDrain&&e.listeners("data").length&&(t.flowing=!0,mt(e))}}(n);e.on("drain",s);var u=!1;function f(){ft("cleanup"),e.removeListener("close",d),e.removeListener("finish",p),e.removeListener("drain",s),e.removeListener("error",l),e.removeListener("unpipe",o),n.removeListener("end",a),n.removeListener("end",f),n.removeListener("data",h),u=!0,!r.awaitDrain||e._writableState&&!e._writableState.needDrain||s()}var c=!1;function h(t){ft("ondata"),c=!1,!1!==e.write(t)||c||((1===r.pipesCount&&r.pipes===e||r.pipesCount>1&&-1!==St(r.pipes,e))&&!u&&(ft("false write response, pause",n._readableState.awaitDrain),n._readableState.awaitDrain++,c=!0),n.pause())}function l(t){var n;ft("onerror",t),g(),e.removeListener("error",l),0===(n="error",e.listeners(n).length)&&e.emit("error",t)}function d(){e.removeListener("finish",p),g()}function p(){ft("onfinish"),e.removeListener("close",d),g()}function g(){ft("unpipe"),n.unpipe(e)}return n.on("data",h),function(e,t,n){if("function"==typeof e.prependListener)return e.prependListener(t,n);e._events&&e._events[t]?Array.isArray(e._events[t])?e._events[t].unshift(n):e._events[t]=[n,e._events[t]]:e.on(t,n)}(e,"error",l),e.once("close",d),e.once("finish",p),e.emit("pipe",n),r.flowing||(ft("pipe resume"),n.resume()),e},ht.prototype.unpipe=function(e){var t=this._readableState;if(0===t.pipesCount)return this;if(1===t.pipesCount)return e&&e!==t.pipes||(e||(e=t.pipes),t.pipes=null,t.pipesCount=0,t.flowing=!1,e&&e.emit("unpipe",this)),this;if(!e){var n=t.pipes,r=t.pipesCount;t.pipes=null,t.pipesCount=0,t.flowing=!1;for(var i=0;i<r;i++)n[i].emit("unpipe",this);return this}var o=St(t.pipes,e);return-1===o||(t.pipes.splice(o,1),t.pipesCount-=1,1===t.pipesCount&&(t.pipes=t.pipes[0]),e.emit("unpipe",this)),this},ht.prototype.on=function(e,t){var n=o.prototype.on.call(this,e,t);if("data"===e)!1!==this._readableState.flowing&&this.resume();else if("readable"===e){var r=this._readableState;r.endEmitted||r.readableListening||(r.readableListening=r.needReadable=!0,r.emittedReadable=!1,r.reading?r.length&&gt(this):me(wt,this))}return n},ht.prototype.addListener=ht.prototype.on,ht.prototype.resume=function(){var e=this._readableState;return e.flowing||(ft("resume"),e.flowing=!0,function(e,t){t.resumeScheduled||(t.resumeScheduled=!0,me(bt,e,t))}(this,e)),this},ht.prototype.pause=function(){return ft("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(ft("pause"),this._readableState.flowing=!1,this.emit("pause")),this},ht.prototype.wrap=function(e){var t=this._readableState,n=!1,r=this;for(var i in e.on("end",(function(){if(ft("wrapped end"),t.decoder&&!t.ended){var e=t.decoder.end();e&&e.length&&r.push(e)}r.push(null)})),e.on("data",(function(i){(ft("wrapped data"),t.decoder&&(i=t.decoder.write(i)),t.objectMode&&null==i)||(t.objectMode||i&&i.length)&&(r.push(i)||(n=!0,e.pause()))})),e)void 0===this[i]&&"function"==typeof e[i]&&(this[i]=function(t){return function(){return e[t].apply(e,arguments)}}(i));return function(e,t){for(var n=0,r=e.length;n<r;n++)t(e[n],n)}(["error","close","destroy","pause","resume"],(function(t){e.on(t,r.emit.bind(r,t))})),r._read=function(t){ft("wrapped _read",t),n&&(n=!1,e.resume())},r},ht._fromList=_t,kt.WritableState=Lt,je(kt,o),Lt.prototype.getBuffer=function(){for(var e=this.bufferedRequest,t=[];e;)t.push(e),e=e.next;return t},kt.prototype.pipe=function(){this.emit("error",new Error("Cannot pipe, not readable"))},kt.prototype.write=function(e,t,n){var r=this._writableState,i=!1;return"function"==typeof t&&(n=t,t=null),A.isBuffer(e)?t="buffer":t||(t=r.defaultEncoding),"function"!=typeof n&&(n=At),r.ended?function(e,t){var n=new Error("write after end");e.emit("error",n),me(t,n)}(this,n):function(e,t,n,r){var i=!0,o=!1;return null===n?o=new TypeError("May not write null values to stream"):A.isBuffer(n)||"string"==typeof n||void 0===n||t.objectMode||(o=new TypeError("Invalid non-string/buffer chunk")),o&&(e.emit("error",o),me(r,o),i=!1),i}(this,r,e,n)&&(r.pendingcb++,i=function(e,t,n,r,i){n=function(e,t,n){e.objectMode||!1===e.decodeStrings||"string"!=typeof t||(t=A.from(t,n));return t}(t,n,r),A.isBuffer(n)&&(r="buffer");var o=t.objectMode?1:n.length;t.length+=o;var a=t.length<t.highWaterMark;a||(t.needDrain=!0);if(t.writing||t.corked){var s=t.lastBufferedRequest;t.lastBufferedRequest=new Tt(n,r,i),s?s.next=t.lastBufferedRequest:t.bufferedRequest=t.lastBufferedRequest,t.bufferedRequestCount+=1}else Pt(e,t,!1,o,n,r,i);return a}(this,r,e,t,n)),i},kt.prototype.cork=function(){this._writableState.corked++},kt.prototype.uncork=function(){var e=this._writableState;e.corked&&(e.corked--,e.writing||e.corked||e.finished||e.bufferProcessing||!e.bufferedRequest||Ct(this,e))},kt.prototype.setDefaultEncoding=function(e){if("string"==typeof e&&(e=e.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((e+"").toLowerCase())>-1))throw new TypeError("Unknown encoding: "+e);return this._writableState.defaultEncoding=e,this},kt.prototype._write=function(e,t,n){n(new Error("not implemented"))},kt.prototype._writev=null,kt.prototype.end=function(e,t,n){var r=this._writableState;"function"==typeof e?(n=e,e=null,t=null):"function"==typeof t&&(n=t,t=null),null!=e&&this.write(e,t),r.corked&&(r.corked=1,this.uncork()),r.ending||r.finished||function(e,t,n){t.ending=!0,jt(e,t),n&&(t.finished?me(n):e.once("finish",n));t.ended=!0,e.writable=!1}(this,r,n)},je(qt,ht);for(var Ut=Object.keys(kt.prototype),It=0;It<Ut.length;It++){var Dt=Ut[It];qt.prototype[Dt]||(qt.prototype[Dt]=kt.prototype[Dt])}function qt(e){if(!(this instanceof qt))return new qt(e);ht.call(this,e),kt.call(this,e),e&&!1===e.readable&&(this.readable=!1),e&&!1===e.writable&&(this.writable=!1),this.allowHalfOpen=!0,e&&!1===e.allowHalfOpen&&(this.allowHalfOpen=!1),this.once("end",Yt)}function Yt(){this.allowHalfOpen||this._writableState.ended||me(zt,this)}function zt(e){e.end()}function Nt(e){this.afterTransform=function(t,n){return function(e,t,n){var r=e._transformState;r.transforming=!1;var i=r.writecb;if(!i)return e.emit("error",new Error("no writecb in Transform class"));r.writechunk=null,r.writecb=null,null!=n&&e.push(n);i(t);var o=e._readableState;o.reading=!1,(o.needReadable||o.length<o.highWaterMark)&&e._read(o.highWaterMark)}(e,t,n)},this.needTransform=!1,this.transforming=!1,this.writecb=null,this.writechunk=null,this.writeencoding=null}function Wt(e){if(!(this instanceof Wt))return new Wt(e);qt.call(this,e),this._transformState=new Nt(this);var t=this;this._readableState.needReadable=!0,this._readableState.sync=!1,e&&("function"==typeof e.transform&&(this._transform=e.transform),"function"==typeof e.flush&&(this._flush=e.flush)),this.once("prefinish",(function(){"function"==typeof this._flush?this._flush((function(e){Ft(t,e)})):Ft(t)}))}function Ft(e,t){if(t)return e.emit("error",t);var n=e._writableState,r=e._transformState;if(n.length)throw new Error("Calling transform done when ws.length != 0");if(r.transforming)throw new Error("Calling transform done when still transforming");return e.push(null)}function Ht(e){if(!(this instanceof Ht))return new Ht(e);Wt.call(this,e)}function Gt(){o.call(this)}je(Wt,qt),Wt.prototype.push=function(e,t){return this._transformState.needTransform=!1,qt.prototype.push.call(this,e,t)},Wt.prototype._transform=function(e,t,n){throw new Error("Not implemented")},Wt.prototype._write=function(e,t,n){var r=this._transformState;if(r.writecb=n,r.writechunk=e,r.writeencoding=t,!r.transforming){var i=this._readableState;(r.needTransform||i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}},Wt.prototype._read=function(e){var t=this._transformState;null!==t.writechunk&&t.writecb&&!t.transforming?(t.transforming=!0,this._transform(t.writechunk,t.writeencoding,t.afterTransform)):t.needTransform=!0},je(Ht,Wt),Ht.prototype._transform=function(e,t,n){n(null,e)},je(Gt,o),Gt.Readable=ht,Gt.Writable=kt,Gt.Duplex=qt,Gt.Transform=Wt,Gt.PassThrough=Ht,Gt.Stream=Gt,Gt.prototype.pipe=function(e,t){var n=this;function r(t){e.writable&&!1===e.write(t)&&n.pause&&n.pause()}function i(){n.readable&&n.resume&&n.resume()}n.on("data",r),e.on("drain",i),e._isStdio||t&&!1===t.end||(n.on("end",s),n.on("close",u));var a=!1;function s(){a||(a=!0,e.end())}function u(){a||(a=!0,"function"==typeof e.destroy&&e.destroy())}function f(e){if(c(),0===o.listenerCount(this,"error"))throw e}function c(){n.removeListener("data",r),e.removeListener("drain",i),n.removeListener("end",s),n.removeListener("close",u),n.removeListener("error",f),e.removeListener("error",f),n.removeListener("end",c),n.removeListener("close",c),e.removeListener("close",c)}return n.on("error",f),e.on("error",f),n.on("end",c),n.on("close",c),e.on("close",c),e.emit("pipe",n),e};
/**
                           * @license
                           * author: 
                           * @tanglepaysdk/common.js v0.0.1
                           * Released under the ISC license.
                           */
var Jt=function(e,t){return Jt=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},Jt(e,t)};function Vt(e,t,n,r){return new(n||(n=Promise))((function(i,o){function a(e){try{u(r.next(e))}catch(e){o(e)}}function s(e){try{u(r.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}u((r=r.apply(e,t||[])).next())}))}function $t(e,t){var n,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(s){return function(u){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;o&&(o=0,s[0]&&(a=0)),a;)try{if(n=1,r&&(i=2&s[0]?r.return:s[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,s[1])).done)return i;switch(r=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,r=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==s[0]&&2!==s[0])){a=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){a.label=s[1];break}if(6===s[0]&&a.label<i[1]){a.label=i[1],i=s;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(s);break}i[2]&&a.ops.pop(),a.trys.pop();continue}s=t.call(e,a)}catch(e){s=[6,e],r=0}finally{n=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,u])}}}var Zt=function(){function e(){this._middlewares=[],this._handler=void 0}return e.builder=function(){return new e},e.prototype.add=function(e){return this._middlewares.push(e),this},e.prototype.build=function(){var e=this;this._middlewares=this._middlewares.reverse();for(var t=void 0,n=function(n){var r=t;t=function(t){return Vt(e,void 0,void 0,(function(){var e,i;return $t(this,(function(o){switch(o.label){case 0:return o.trys.push([0,2,,3]),[4,n(t,r)];case 1:return[2,o.sent()];case 2:return e=o.sent(),i={code:99999,name:"unhandled exception",message:"unhandled exception",data:e},[2,{id:t.id,version:0,error:i}];case 3:return[2]}}))}))}},r=0,i=this._middlewares;r<i.length;r++)n(i[r]);return this._handler=t,this},e.prototype.request=function(e){return Vt(this,void 0,void 0,(function(){var t;return $t(this,(function(n){return this._handler?[2,this._handler(e)]:(t={code:99998,name:"uninit",message:"engine not initialized"},[2,{id:e.id,version:0,error:t}])}))}))},e}(),Kt=function(e){function t(t){var n=this,r=Object.assign(null!=t?t:{},{readableObjectMode:!0,writableObjectMode:!0});return(n=e.call(this,r)||this)._isMobile=!1,window.addEventListener("message",(function(e){var t=e.data;n.push(t)}),!1),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}Jt(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}(t,e),Object.defineProperty(t.prototype,"isMobile",{set:function(e){this._isMobile=e},enumerable:!1,configurable:!0}),t.prototype._write=function(e,t,n){var r=window;this._isMobile&&r.ReactNativeWebView?r.ReactNativeWebView.postMessage(JSON.stringify(e)):window.postMessage(e,"*"),n()},t.prototype._read=function(e){},t}(qt);
/**
                           * @license
                           * author: TanglePay
                           * @tanglepaysdk/core.js v0.0.8
                           * Released under the Apache-2.0 license.
                           */function Qt(e,t,n,r){return new(n||(n=Promise))((function(i,o){function a(e){try{u(r.next(e))}catch(e){o(e)}}function s(e){try{u(r.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}u((r=r.apply(e,t||[])).next())}))}function Xt(e,t){var n,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(s){return function(u){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;o&&(o=0,s[0]&&(a=0)),a;)try{if(n=1,r&&(i=2&s[0]?r.return:s[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,s[1])).done)return i;switch(r=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,r=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==s[0]&&2!==s[0])){a=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){a.label=s[1];break}if(6===s[0]&&a.label<i[1]){a.label=i[1],i=s;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(s);break}i[2]&&a.ops.pop(),a.trys.pop();continue}s=t.call(e,a)}catch(e){s=[6,e],r=0}finally{n=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,u])}}}var en=["Android","iPhone","SymbianOS","Windows Phone","iPad","iPod"],tn=function(e){!function(){for(var e=navigator.userAgent,t=0,n=en;t<n.length;t++){var r=n[t];if(e.includes(r))return!0}return!1}()?window.open("https://tanglepay.com/","TanglePay"):e&&window.open("https://chrome.google.com/webstore/detail/tanglepay-iota-wallet/hbneiaclpaaglopiogfdhgccebncnjmc?hl=en-US","TanglePay-Extension")},nn={},rn={},on=1,an=new Kt,sn=Zt.builder().add((function(e,t){return Qt(void 0,void 0,void 0,(function(){return Xt(this,(function(n){return e.id=on++,e.version=101,e.params.cmd="injectToContent##".concat(e.params.cmd),e.params.origin=window.location.origin,e.params.id=e.id,[2,t(e)]}))}))})).add((function(e){return Qt(void 0,void 0,void 0,(function(){var t,n,r,i,o;return Xt(this,(function(a){return t=e.params,n=t.cmd,r=t.data,i=t.id,an.write(e.params),"injectToContent##iota_request"==n?(o=r.method,[2,new Promise((function(t,n){var r;rn["iota_request_".concat(o,"_").concat(null!==(r=e.id)&&void 0!==r?r:0)]=function(e,r){if(200===r){if("iota_connect"===o){var a=e.address||"";nn.curTanglePayAddress=a+"_"+e.nodeId}t({id:i,version:100,data:e})}else n(e)}}))]):[2,{id:e.id,version:100,data:void 0}]}))}))})).build(),un={redirectAppStoreIfNotInstalled:!1,isTanglePay:!1,tanglePayVersion:"",_events:new o,request:function(e){var t=e.method,n=e.params;return e.timeout,Qt(void 0,void 0,void 0,(function(){return Xt(this,(function(e){switch(e.label){case 0:return un.isTanglePay||tn(un.redirectAppStoreIfNotInstalled),t=["eth_sign","personal_sign"].includes(t)?"iota_sign":t,[4,sn.request({params:{cmd:"iota_request",data:{method:t,params:n}}})];case 1:return[2,e.sent().data]}}))}))},on:function(e,t){var n="iota_event_".concat(e);un._events.on(n,t)},removeListener:function(e,t){un._events.removeListener(e,t)},removeAllListener:function(e){un._events.removeAllListeners(e)}};an.on("data",(function(e){alert(JSON.stringify(e));var t=((null==e?void 0:e.cmd)||"").replace("contentToInject##",""),n=null==e?void 0:e.data,r=null==e?void 0:e.code,i=null==e?void 0:e.id;switch(t){case"getTanglePayInfo":un.tanglePayVersion=null==n?void 0:n.version,window.dispatchEvent(new CustomEvent("iota-ready"));break;case"iota_request":var o=rn["iota_request_".concat(n.method,"_").concat(null!=i?i:0)];o&&o(n.response,r);break;case"iota_event":var a=n.method,s="iota_event_".concat(n.method),u=n.response;if("accountsChanged"===a){var f=u.address+"_"+u.nodeId;nn.curTanglePayAddress!==f&&un._events.emit(s,u),nn.curTanglePayAddress=f||""}else un._events.emit(s,u)}}));var fn=0,cn=function(){var e=window.TanglePayEnv;if(!e&&++fn<=10)setTimeout(cn,300);else switch(e){case"app":case"chrome":un.isTanglePay=!0,an.isMobile="app"==e,sn.request({params:{cmd:"getTanglePayInfo"}});break;default:window.dispatchEvent(new CustomEvent("iota-ready")),tn(un.redirectAppStoreIfNotInstalled)}};window.addEventListener("load",cn);var hn=function(i){function o(){var e=i.call(this)||this;e._version=101,e._seq=1;var o=function(t){return function(i,o){return n(e,void 0,void 0,(function(){var e;return r(this,(function(n){switch(n.label){case 0:return console.log("req:"+t,i),[4,o(i)];case 1:return e=n.sent(),console.log("resp:"+t,e),[2,e]}}))}))}};e._rpcEngine=Zt.builder().add((function(t,i){return n(e,void 0,void 0,(function(){var e;return r(this,(function(n){switch(n.label){case 0:if(null!=this._selectedAddress)return[3,4];n.label=1;case 1:return n.trys.push([1,3,,4]),[4,un.request({method:"iota_connect",params:{}})];case 2:if(!(e=n.sent())||!e.address)throw new Error("not connected");return this._selectedAddress=e.address,[3,4];case 3:throw n.sent();case 4:return[4,i(t)];case 5:return[2,n.sent()]}}))}))})).add(o("1")).add((function(t,i){return n(e,void 0,void 0,(function(){return r(this,(function(e){return t.id=this._seq++,t.version=this._version,[2,i(t)]}))}))})).add((function(i,o){return n(e,void 0,void 0,(function(){var e,n,a,s,u,f,c,h,l,d,p,g;return r(this,(function(r){switch(r.label){case 0:return e={eth_requestAccounts:"iota_accounts",eth_connect:"iota_connect"},n={eth_sign:function(e){return{content:e}},personal_sign:function(e){return{content:e}},eth_sendTransaction:function(e){var t=e[0];return t.value=parseInt(t.value),t},eth_getBalance:function(){return{assetsList:["evm"],addressList:[]}}},a=function(e){return e},s=i.method,(u=t({},i)).method=null!==(d=e[s])&&void 0!==d?d:s,f=null!==(p=n[s])&&void 0!==p?p:a,u.params=f(u.params),[4,o(u)];case 1:return c=r.sent(),h=null!==(g={eth_connect:function(e){return[e.address]},eth_getBalance:function(e){return e.amount}}[s])&&void 0!==g?g:a,(l=t({},c)).data=h(c.data),[2,l]}}))}))})).add(o("2")).add((function(t){return n(e,void 0,void 0,(function(){var e,n,i,o;return r(this,(function(r){switch(r.label){case 0:return e=t.method,n=t.params,i=t.id,[4,un.request({method:e,params:n})];case 1:return o=r.sent(),[2,{id:i,version:100,data:o}]}}))}))})).build();for(var a={connect:e._handleConnect,disconnect:e._handleDisconnect,message:e._handleMessage,chainChanged:e._handleChainChanged,accountsChanged:e._handleAccountsChanged},s=0,u=Object.entries(a);s<u.length;s++){var f=u[s],c=f[0],h=f[1];un.on(c,h.bind(e))}return e}return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}(o,i),Object.defineProperty(o.prototype,"isTanglePay",{get:function(){return!0},enumerable:!1,configurable:!0}),Object.defineProperty(o.prototype,"selectedAddress",{get:function(){return this._selectedAddress},enumerable:!1,configurable:!0}),o.prototype._handleConnect=function(e){this.emit("connect",e)},o.prototype._handleDisconnect=function(e){this.emit("disconnect",e)},o.prototype._handleMessage=function(e){this.emit("message",e)},o.prototype._handleChainChanged=function(e){this.emit("chainChanged",e)},o.prototype._handleAccountsChanged=function(e){this.emit("accountsChanged",e)},o.prototype.request=function(e){return n(this,void 0,void 0,(function(){var t;return r(this,(function(n){switch(n.label){case 0:return[4,this._rpcEngine.request(e)];case 1:if((t=n.sent()).error)throw t.error;return[2,t.data]}}))}))},o}(o),ln=new hn;return window.ethereum=ln,ln}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
